1. Что такое стек вызовов? и зачем нужен?
 2. Что такое прото, прототип и чем они отличаются?

2. __proto__ это ссылка на prototype конструктора, которым был создан,  
Prototype это обьект, который может быть только у функций. 
Там содержатся унаследованные свойства и методы к которым имеются доступ по ссылке __proto__  инстансы этого конструктора.
Тоесть по ссылке __proto__ обьекты имеют доступ к своим унаследованным свойствам.
Последним в цепочке пртотипов всегда является ссылка на prototype Object.
При поиске свойств в обьекте поиск начианется с собственных свойств,  потом по цепочке прототипов(используя ссылку прото) сверхху вниз.
Object.create(null)-будет создан обьект с пустой цепочкой прототипов. 
Итог Прототайп это обьект, который есть только у функций(кроме стрелочных) в котором находятся унаследованные свойства для 
инстансов созданных этим конструктором, а прототайп это ссылка на прототайп 'родителя'. Первыым в прототайпе всегда нахожится ссылка на сам конструктор

1.Стек это часть памяти, в которой выполняется script. В стек попадают только функции;
 Когда происходит в скрипте вызов функции интерпретатор помещает ее в стек в низ,
 выше помещаются функции которые вызываются первой вызванной функцией(необходимы ей в работе) в той очереди, 
в которой происходит вызов их,
и выполнив свою работу в порядке очереди(очередь в нашем коллстеке первым зашёл последним вышел
 тоесть функция которая последняя попала в стек выйдет из неё первой.)освобождают стек и только после этого завершит свою работу внешняя функция
Первым в очередь  коллстек попадает основной код(основной наш скрипт)
